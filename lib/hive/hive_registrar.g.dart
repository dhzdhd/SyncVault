// Generated by Hive CE
// Do not modify
// Check in to version control

import 'package:hive_ce/hive.dart';
import 'package:syncvault/hive/hive_adapters.dart';

extension HiveRegistrar on HiveInterface {
  void registerAdapters() {
    registerAdapter(ConnectionModelAdapter());
    registerAdapter(DriveProviderModelAdapter());
    registerAdapter(DropBoxProviderAdapter());
    registerAdapter(FolderHashModelAdapter());
    registerAdapter(GoogleDriveProviderAdapter());
    registerAdapter(HashDigestAdapter());
    registerAdapter(IntroSettingsModelAdapter());
    registerAdapter(LocalAdapter());
    registerAdapter(LocalProviderAdapter());
    registerAdapter(MinioProviderAdapter());
    registerAdapter(NextCloudProviderAdapter());
    registerAdapter(OAuth2Adapter());
    registerAdapter(OneDriveProviderAdapter());
    registerAdapter(ProtonDriveProviderAdapter());
    registerAdapter(S3Adapter());
    registerAdapter(SettingsModelAdapter());
    registerAdapter(ThemeModeAdapter());
    registerAdapter(UserPasswordAdapter());
    registerAdapter(WebdavAdapter());
    registerAdapter(WorkflowModelAdapter());
  }
}

extension IsolatedHiveRegistrar on IsolatedHiveInterface {
  void registerAdapters() {
    registerAdapter(ConnectionModelAdapter());
    registerAdapter(DriveProviderModelAdapter());
    registerAdapter(DropBoxProviderAdapter());
    registerAdapter(FolderHashModelAdapter());
    registerAdapter(GoogleDriveProviderAdapter());
    registerAdapter(HashDigestAdapter());
    registerAdapter(IntroSettingsModelAdapter());
    registerAdapter(LocalAdapter());
    registerAdapter(LocalProviderAdapter());
    registerAdapter(MinioProviderAdapter());
    registerAdapter(NextCloudProviderAdapter());
    registerAdapter(OAuth2Adapter());
    registerAdapter(OneDriveProviderAdapter());
    registerAdapter(ProtonDriveProviderAdapter());
    registerAdapter(S3Adapter());
    registerAdapter(SettingsModelAdapter());
    registerAdapter(ThemeModeAdapter());
    registerAdapter(UserPasswordAdapter());
    registerAdapter(WebdavAdapter());
    registerAdapter(WorkflowModelAdapter());
  }
}
